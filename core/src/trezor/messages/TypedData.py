# Automatically generated by pb2py
# fmt: off
import protobuf as p

if __debug__:
    try:
        from typing import List
    except ImportError:
        List = None  # type: ignore


class TypedData(p.MessageType):

    def __init__(
        self,
        data_type: int = None,
        literal: str = None,
        struct: List['TypedData'] = None,
        name: str = None,
    ) -> None:
        self.data_type = data_type
        self.literal = literal
        self.struct = struct if struct is not None else []
        self.name = name

    @classmethod
    def get_fields(cls):
        return {
            1: ('data_type', p.UVarintType, 0),  # required
            2: ('literal', p.UnicodeType, 0),
            4: ('struct', TypedData, p.FLAG_REPEATED),
            5: ('name', p.UnicodeType, 0),  # required
        }
